/**
 * Neurelo API Spec
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { type Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 *
 * @export
 * @interface AffectedRowsOutput
 */
export interface AffectedRowsOutput {
    /**
     *
     * @type {number}
     * @memberof AffectedRowsOutput
     */
    'count'?: number;
}
/**
 *
 * @export
 * @interface AggregateByCulturalData200Response
 */
export interface AggregateByCulturalData200Response {
    /**
     *
     * @type {AggregateCulturalData}
     * @memberof AggregateByCulturalData200Response
     */
    'data': AggregateCulturalData;
}
/**
 *
 * @export
 * @interface AggregateCulturalData
 */
export interface AggregateCulturalData {
    /**
     *
     * @type {CulturalDataCountAggregateOutputType}
     * @memberof AggregateCulturalData
     */
    '_count'?: CulturalDataCountAggregateOutputType;
    /**
     *
     * @type {CulturalDataMaxAggregateOutputType}
     * @memberof AggregateCulturalData
     */
    '_max'?: CulturalDataMaxAggregateOutputType;
    /**
     *
     * @type {CulturalDataMinAggregateOutputType}
     * @memberof AggregateCulturalData
     */
    '_min'?: CulturalDataMinAggregateOutputType;
}
/**
 *
 * @export
 * @interface CreateManyCulturalData201Response
 */
export interface CreateManyCulturalData201Response {
    /**
     *
     * @type {AffectedRowsOutput}
     * @memberof CreateManyCulturalData201Response
     */
    'data': AffectedRowsOutput;
}
/**
 *
 * @export
 * @interface CreateOneCulturalData201Response
 */
export interface CreateOneCulturalData201Response {
    /**
     *
     * @type {CulturalData}
     * @memberof CreateOneCulturalData201Response
     */
    'data': CulturalData;
}
/**
 *
 * @export
 * @interface CulturalData
 */
export interface CulturalData {
    /**
     *
     * @type {string}
     * @memberof CulturalData
     */
    'Cities'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalData
     */
    'Ethnicity_Background'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalData
     */
    'Food'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalData
     */
    'Language'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalData
     */
    'Literature'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalData
     */
    'Music'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalData
     */
    'Nationality'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalData
     */
    'Politics'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalData
     */
    'id'?: string;
}
/**
 *
 * @export
 * @interface CulturalDataAggregateInput
 */
export interface CulturalDataAggregateInput {
    /**
     *
     * @type {Array<string>}
     * @memberof CulturalDataAggregateInput
     */
    '_count'?: Array<CulturalDataAggregateInputCountEnum>;
    /**
     *
     * @type {Array<string>}
     * @memberof CulturalDataAggregateInput
     */
    '_max'?: Array<CulturalDataAggregateInputMaxEnum>;
    /**
     *
     * @type {Array<string>}
     * @memberof CulturalDataAggregateInput
     */
    '_min'?: Array<CulturalDataAggregateInputMinEnum>;
}
export declare const CulturalDataAggregateInputCountEnum: {
    readonly All: "_all";
    readonly Cities: "Cities";
    readonly EthnicityBackground: "Ethnicity_Background";
    readonly Food: "Food";
    readonly Language: "Language";
    readonly Literature: "Literature";
    readonly Music: "Music";
    readonly Nationality: "Nationality";
    readonly Politics: "Politics";
    readonly Id: "id";
};
export type CulturalDataAggregateInputCountEnum = typeof CulturalDataAggregateInputCountEnum[keyof typeof CulturalDataAggregateInputCountEnum];
export declare const CulturalDataAggregateInputMaxEnum: {
    readonly Cities: "Cities";
    readonly EthnicityBackground: "Ethnicity_Background";
    readonly Food: "Food";
    readonly Language: "Language";
    readonly Literature: "Literature";
    readonly Music: "Music";
    readonly Nationality: "Nationality";
    readonly Politics: "Politics";
    readonly Id: "id";
};
export type CulturalDataAggregateInputMaxEnum = typeof CulturalDataAggregateInputMaxEnum[keyof typeof CulturalDataAggregateInputMaxEnum];
export declare const CulturalDataAggregateInputMinEnum: {
    readonly Cities: "Cities";
    readonly EthnicityBackground: "Ethnicity_Background";
    readonly Food: "Food";
    readonly Language: "Language";
    readonly Literature: "Literature";
    readonly Music: "Music";
    readonly Nationality: "Nationality";
    readonly Politics: "Politics";
    readonly Id: "id";
};
export type CulturalDataAggregateInputMinEnum = typeof CulturalDataAggregateInputMinEnum[keyof typeof CulturalDataAggregateInputMinEnum];
/**
 *
 * @export
 * @interface CulturalDataCountAggregateOutputType
 */
export interface CulturalDataCountAggregateOutputType {
    /**
     *
     * @type {number}
     * @memberof CulturalDataCountAggregateOutputType
     */
    'Cities'?: number;
    /**
     *
     * @type {number}
     * @memberof CulturalDataCountAggregateOutputType
     */
    'Ethnicity_Background'?: number;
    /**
     *
     * @type {number}
     * @memberof CulturalDataCountAggregateOutputType
     */
    'Food'?: number;
    /**
     *
     * @type {number}
     * @memberof CulturalDataCountAggregateOutputType
     */
    'Language'?: number;
    /**
     *
     * @type {number}
     * @memberof CulturalDataCountAggregateOutputType
     */
    'Literature'?: number;
    /**
     *
     * @type {number}
     * @memberof CulturalDataCountAggregateOutputType
     */
    'Music'?: number;
    /**
     *
     * @type {number}
     * @memberof CulturalDataCountAggregateOutputType
     */
    'Nationality'?: number;
    /**
     *
     * @type {number}
     * @memberof CulturalDataCountAggregateOutputType
     */
    'Politics'?: number;
    /**
     *
     * @type {number}
     * @memberof CulturalDataCountAggregateOutputType
     */
    '_all'?: number;
    /**
     *
     * @type {number}
     * @memberof CulturalDataCountAggregateOutputType
     */
    'id'?: number;
}
/**
 *
 * @export
 * @interface CulturalDataCountOrderByAggregateInput
 */
export interface CulturalDataCountOrderByAggregateInput {
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataCountOrderByAggregateInput
     */
    'Cities'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataCountOrderByAggregateInput
     */
    'Ethnicity_Background'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataCountOrderByAggregateInput
     */
    'Food'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataCountOrderByAggregateInput
     */
    'Language'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataCountOrderByAggregateInput
     */
    'Literature'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataCountOrderByAggregateInput
     */
    'Music'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataCountOrderByAggregateInput
     */
    'Nationality'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataCountOrderByAggregateInput
     */
    'Politics'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataCountOrderByAggregateInput
     */
    'id'?: SortOrder;
}
/**
 *
 * @export
 * @interface CulturalDataCreateInput
 */
export interface CulturalDataCreateInput {
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateInput
     */
    'Cities': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateInput
     */
    'Ethnicity_Background': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateInput
     */
    'Food': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateInput
     */
    'Language': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateInput
     */
    'Literature': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateInput
     */
    'Music': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateInput
     */
    'Nationality': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateInput
     */
    'Politics': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateInput
     */
    'id'?: string;
}
/**
 *
 * @export
 * @interface CulturalDataCreateManyInput
 */
export interface CulturalDataCreateManyInput {
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateManyInput
     */
    'Cities': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateManyInput
     */
    'Ethnicity_Background': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateManyInput
     */
    'Food': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateManyInput
     */
    'Language': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateManyInput
     */
    'Literature': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateManyInput
     */
    'Music': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateManyInput
     */
    'Nationality': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateManyInput
     */
    'Politics': string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataCreateManyInput
     */
    'id'?: string;
}
/**
 *
 * @export
 * @interface CulturalDataGroupByInput
 */
export interface CulturalDataGroupByInput {
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataGroupByInput
     */
    'Cities'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataGroupByInput
     */
    'Ethnicity_Background'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataGroupByInput
     */
    'Food'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataGroupByInput
     */
    'Language'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataGroupByInput
     */
    'Literature'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataGroupByInput
     */
    'Music'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataGroupByInput
     */
    'Nationality'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataGroupByInput
     */
    'Politics'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof CulturalDataGroupByInput
     */
    '_count'?: Array<CulturalDataGroupByInputCountEnum>;
    /**
     *
     * @type {Array<string>}
     * @memberof CulturalDataGroupByInput
     */
    '_max'?: Array<CulturalDataGroupByInputMaxEnum>;
    /**
     *
     * @type {Array<string>}
     * @memberof CulturalDataGroupByInput
     */
    '_min'?: Array<CulturalDataGroupByInputMinEnum>;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataGroupByInput
     */
    'id'?: boolean;
}
export declare const CulturalDataGroupByInputCountEnum: {
    readonly All: "_all";
    readonly Cities: "Cities";
    readonly EthnicityBackground: "Ethnicity_Background";
    readonly Food: "Food";
    readonly Language: "Language";
    readonly Literature: "Literature";
    readonly Music: "Music";
    readonly Nationality: "Nationality";
    readonly Politics: "Politics";
    readonly Id: "id";
};
export type CulturalDataGroupByInputCountEnum = typeof CulturalDataGroupByInputCountEnum[keyof typeof CulturalDataGroupByInputCountEnum];
export declare const CulturalDataGroupByInputMaxEnum: {
    readonly Cities: "Cities";
    readonly EthnicityBackground: "Ethnicity_Background";
    readonly Food: "Food";
    readonly Language: "Language";
    readonly Literature: "Literature";
    readonly Music: "Music";
    readonly Nationality: "Nationality";
    readonly Politics: "Politics";
    readonly Id: "id";
};
export type CulturalDataGroupByInputMaxEnum = typeof CulturalDataGroupByInputMaxEnum[keyof typeof CulturalDataGroupByInputMaxEnum];
export declare const CulturalDataGroupByInputMinEnum: {
    readonly Cities: "Cities";
    readonly EthnicityBackground: "Ethnicity_Background";
    readonly Food: "Food";
    readonly Language: "Language";
    readonly Literature: "Literature";
    readonly Music: "Music";
    readonly Nationality: "Nationality";
    readonly Politics: "Politics";
    readonly Id: "id";
};
export type CulturalDataGroupByInputMinEnum = typeof CulturalDataGroupByInputMinEnum[keyof typeof CulturalDataGroupByInputMinEnum];
/**
 *
 * @export
 * @interface CulturalDataGroupByOutputType
 */
export interface CulturalDataGroupByOutputType {
    /**
     *
     * @type {string}
     * @memberof CulturalDataGroupByOutputType
     */
    'Cities'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataGroupByOutputType
     */
    'Ethnicity_Background'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataGroupByOutputType
     */
    'Food'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataGroupByOutputType
     */
    'Language'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataGroupByOutputType
     */
    'Literature'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataGroupByOutputType
     */
    'Music'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataGroupByOutputType
     */
    'Nationality'?: string;
    /**
     *
     * @type {string}
     * @memberof CulturalDataGroupByOutputType
     */
    'Politics'?: string;
    /**
     *
     * @type {CulturalDataCountAggregateOutputType}
     * @memberof CulturalDataGroupByOutputType
     */
    '_count'?: CulturalDataCountAggregateOutputType;
    /**
     *
     * @type {CulturalDataMaxAggregateOutputType}
     * @memberof CulturalDataGroupByOutputType
     */
    '_max'?: CulturalDataMaxAggregateOutputType;
    /**
     *
     * @type {CulturalDataMinAggregateOutputType}
     * @memberof CulturalDataGroupByOutputType
     */
    '_min'?: CulturalDataMinAggregateOutputType;
    /**
     *
     * @type {string}
     * @memberof CulturalDataGroupByOutputType
     */
    'id'?: string;
}
/**
 *
 * @export
 * @interface CulturalDataMaxAggregateOutputType
 */
export interface CulturalDataMaxAggregateOutputType {
    /**
     *
     * @type {string}
     * @memberof CulturalDataMaxAggregateOutputType
     */
    'Cities'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMaxAggregateOutputType
     */
    'Ethnicity_Background'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMaxAggregateOutputType
     */
    'Food'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMaxAggregateOutputType
     */
    'Language'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMaxAggregateOutputType
     */
    'Literature'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMaxAggregateOutputType
     */
    'Music'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMaxAggregateOutputType
     */
    'Nationality'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMaxAggregateOutputType
     */
    'Politics'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMaxAggregateOutputType
     */
    'id'?: string | null;
}
/**
 *
 * @export
 * @interface CulturalDataMaxOrderByAggregateInput
 */
export interface CulturalDataMaxOrderByAggregateInput {
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMaxOrderByAggregateInput
     */
    'Cities'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMaxOrderByAggregateInput
     */
    'Ethnicity_Background'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMaxOrderByAggregateInput
     */
    'Food'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMaxOrderByAggregateInput
     */
    'Language'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMaxOrderByAggregateInput
     */
    'Literature'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMaxOrderByAggregateInput
     */
    'Music'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMaxOrderByAggregateInput
     */
    'Nationality'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMaxOrderByAggregateInput
     */
    'Politics'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMaxOrderByAggregateInput
     */
    'id'?: SortOrder;
}
/**
 *
 * @export
 * @interface CulturalDataMinAggregateOutputType
 */
export interface CulturalDataMinAggregateOutputType {
    /**
     *
     * @type {string}
     * @memberof CulturalDataMinAggregateOutputType
     */
    'Cities'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMinAggregateOutputType
     */
    'Ethnicity_Background'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMinAggregateOutputType
     */
    'Food'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMinAggregateOutputType
     */
    'Language'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMinAggregateOutputType
     */
    'Literature'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMinAggregateOutputType
     */
    'Music'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMinAggregateOutputType
     */
    'Nationality'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMinAggregateOutputType
     */
    'Politics'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CulturalDataMinAggregateOutputType
     */
    'id'?: string | null;
}
/**
 *
 * @export
 * @interface CulturalDataMinOrderByAggregateInput
 */
export interface CulturalDataMinOrderByAggregateInput {
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMinOrderByAggregateInput
     */
    'Cities'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMinOrderByAggregateInput
     */
    'Ethnicity_Background'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMinOrderByAggregateInput
     */
    'Food'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMinOrderByAggregateInput
     */
    'Language'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMinOrderByAggregateInput
     */
    'Literature'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMinOrderByAggregateInput
     */
    'Music'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMinOrderByAggregateInput
     */
    'Nationality'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMinOrderByAggregateInput
     */
    'Politics'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataMinOrderByAggregateInput
     */
    'id'?: SortOrder;
}
/**
 *
 * @export
 * @interface CulturalDataOrderByWithAggregationInput
 */
export interface CulturalDataOrderByWithAggregationInput {
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    'Cities'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    'Ethnicity_Background'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    'Food'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    'Language'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    'Literature'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    'Music'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    'Nationality'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    'Politics'?: SortOrder;
    /**
     *
     * @type {CulturalDataCountOrderByAggregateInput}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    '_count'?: CulturalDataCountOrderByAggregateInput;
    /**
     *
     * @type {CulturalDataMaxOrderByAggregateInput}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    '_max'?: CulturalDataMaxOrderByAggregateInput;
    /**
     *
     * @type {CulturalDataMinOrderByAggregateInput}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    '_min'?: CulturalDataMinOrderByAggregateInput;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithAggregationInput
     */
    'id'?: SortOrder;
}
/**
 *
 * @export
 * @interface CulturalDataOrderByWithRelationInput
 */
export interface CulturalDataOrderByWithRelationInput {
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithRelationInput
     */
    'Cities'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithRelationInput
     */
    'Ethnicity_Background'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithRelationInput
     */
    'Food'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithRelationInput
     */
    'Language'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithRelationInput
     */
    'Literature'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithRelationInput
     */
    'Music'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithRelationInput
     */
    'Nationality'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithRelationInput
     */
    'Politics'?: SortOrder;
    /**
     *
     * @type {SortOrder}
     * @memberof CulturalDataOrderByWithRelationInput
     */
    'id'?: SortOrder;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const CulturalDataScalarFieldEnum: {
    readonly Cities: "Cities";
    readonly EthnicityBackground: "Ethnicity_Background";
    readonly Food: "Food";
    readonly Language: "Language";
    readonly Literature: "Literature";
    readonly Music: "Music";
    readonly Nationality: "Nationality";
    readonly Politics: "Politics";
    readonly Id: "id";
};
export type CulturalDataScalarFieldEnum = typeof CulturalDataScalarFieldEnum[keyof typeof CulturalDataScalarFieldEnum];
/**
 *
 * @export
 * @interface CulturalDataScalarWhereWithAggregatesInput
 */
export interface CulturalDataScalarWhereWithAggregatesInput {
    /**
     *
     * @type {CulturalDataScalarWhereWithAggregatesInputAND}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'AND'?: CulturalDataScalarWhereWithAggregatesInputAND;
    /**
     *
     * @type {CulturalDataScalarWhereWithAggregatesInputCities}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'Cities'?: CulturalDataScalarWhereWithAggregatesInputCities;
    /**
     *
     * @type {CulturalDataScalarWhereWithAggregatesInputCities}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'Ethnicity_Background'?: CulturalDataScalarWhereWithAggregatesInputCities;
    /**
     *
     * @type {CulturalDataScalarWhereWithAggregatesInputCities}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'Food'?: CulturalDataScalarWhereWithAggregatesInputCities;
    /**
     *
     * @type {CulturalDataScalarWhereWithAggregatesInputCities}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'Language'?: CulturalDataScalarWhereWithAggregatesInputCities;
    /**
     *
     * @type {CulturalDataScalarWhereWithAggregatesInputCities}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'Literature'?: CulturalDataScalarWhereWithAggregatesInputCities;
    /**
     *
     * @type {CulturalDataScalarWhereWithAggregatesInputCities}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'Music'?: CulturalDataScalarWhereWithAggregatesInputCities;
    /**
     *
     * @type {CulturalDataScalarWhereWithAggregatesInputAND}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'NOT'?: CulturalDataScalarWhereWithAggregatesInputAND;
    /**
     *
     * @type {CulturalDataScalarWhereWithAggregatesInputCities}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'Nationality'?: CulturalDataScalarWhereWithAggregatesInputCities;
    /**
     *
     * @type {Array<CulturalDataScalarWhereWithAggregatesInput>}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'OR'?: Array<CulturalDataScalarWhereWithAggregatesInput>;
    /**
     *
     * @type {CulturalDataScalarWhereWithAggregatesInputCities}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'Politics'?: CulturalDataScalarWhereWithAggregatesInputCities;
    /**
     *
     * @type {CulturalDataScalarWhereWithAggregatesInputCities}
     * @memberof CulturalDataScalarWhereWithAggregatesInput
     */
    'id'?: CulturalDataScalarWhereWithAggregatesInputCities;
}
/**
 * @type CulturalDataScalarWhereWithAggregatesInputAND
 * @export
 */
export type CulturalDataScalarWhereWithAggregatesInputAND = Array<CulturalDataScalarWhereWithAggregatesInput> | CulturalDataScalarWhereWithAggregatesInput;
/**
 * @type CulturalDataScalarWhereWithAggregatesInputCities
 * @export
 */
export type CulturalDataScalarWhereWithAggregatesInputCities = StringWithAggregatesFilter | string;
/**
 *
 * @export
 * @interface CulturalDataSelectInput
 */
export interface CulturalDataSelectInput {
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataSelectInput
     */
    '$related'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataSelectInput
     */
    '$scalars'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataSelectInput
     */
    'Cities'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataSelectInput
     */
    'Ethnicity_Background'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataSelectInput
     */
    'Food'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataSelectInput
     */
    'Language'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataSelectInput
     */
    'Literature'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataSelectInput
     */
    'Music'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataSelectInput
     */
    'Nationality'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataSelectInput
     */
    'Politics'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CulturalDataSelectInput
     */
    'id'?: boolean;
}
/**
 *
 * @export
 * @interface CulturalDataUpdateInput
 */
export interface CulturalDataUpdateInput {
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateInput
     */
    'Cities'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateInput
     */
    'Ethnicity_Background'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateInput
     */
    'Food'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateInput
     */
    'Language'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateInput
     */
    'Literature'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateInput
     */
    'Music'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateInput
     */
    'Nationality'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateInput
     */
    'Politics'?: CulturalDataUpdateInputCities;
}
/**
 * @type CulturalDataUpdateInputCities
 * @export
 */
export type CulturalDataUpdateInputCities = StringFieldUpdateOperationsInput | string;
/**
 *
 * @export
 * @interface CulturalDataUpdateManyInput
 */
export interface CulturalDataUpdateManyInput {
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateManyInput
     */
    'Cities'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateManyInput
     */
    'Ethnicity_Background'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateManyInput
     */
    'Food'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateManyInput
     */
    'Language'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateManyInput
     */
    'Literature'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateManyInput
     */
    'Music'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateManyInput
     */
    'Nationality'?: CulturalDataUpdateInputCities;
    /**
     *
     * @type {CulturalDataUpdateInputCities}
     * @memberof CulturalDataUpdateManyInput
     */
    'Politics'?: CulturalDataUpdateInputCities;
}
/**
 *
 * @export
 * @interface CulturalDataWhereInput
 */
export interface CulturalDataWhereInput {
    /**
     *
     * @type {CulturalDataWhereInputAND}
     * @memberof CulturalDataWhereInput
     */
    'AND'?: CulturalDataWhereInputAND;
    /**
     *
     * @type {CulturalDataWhereInputCities}
     * @memberof CulturalDataWhereInput
     */
    'Cities'?: CulturalDataWhereInputCities;
    /**
     *
     * @type {CulturalDataWhereInputCities}
     * @memberof CulturalDataWhereInput
     */
    'Ethnicity_Background'?: CulturalDataWhereInputCities;
    /**
     *
     * @type {CulturalDataWhereInputCities}
     * @memberof CulturalDataWhereInput
     */
    'Food'?: CulturalDataWhereInputCities;
    /**
     *
     * @type {CulturalDataWhereInputCities}
     * @memberof CulturalDataWhereInput
     */
    'Language'?: CulturalDataWhereInputCities;
    /**
     *
     * @type {CulturalDataWhereInputCities}
     * @memberof CulturalDataWhereInput
     */
    'Literature'?: CulturalDataWhereInputCities;
    /**
     *
     * @type {CulturalDataWhereInputCities}
     * @memberof CulturalDataWhereInput
     */
    'Music'?: CulturalDataWhereInputCities;
    /**
     *
     * @type {CulturalDataWhereInputAND}
     * @memberof CulturalDataWhereInput
     */
    'NOT'?: CulturalDataWhereInputAND;
    /**
     *
     * @type {CulturalDataWhereInputCities}
     * @memberof CulturalDataWhereInput
     */
    'Nationality'?: CulturalDataWhereInputCities;
    /**
     *
     * @type {Array<CulturalDataWhereInput>}
     * @memberof CulturalDataWhereInput
     */
    'OR'?: Array<CulturalDataWhereInput>;
    /**
     *
     * @type {CulturalDataWhereInputCities}
     * @memberof CulturalDataWhereInput
     */
    'Politics'?: CulturalDataWhereInputCities;
    /**
     *
     * @type {CulturalDataWhereInputCities}
     * @memberof CulturalDataWhereInput
     */
    'id'?: CulturalDataWhereInputCities;
}
/**
 * @type CulturalDataWhereInputAND
 * @export
 */
export type CulturalDataWhereInputAND = Array<CulturalDataWhereInput> | CulturalDataWhereInput;
/**
 * @type CulturalDataWhereInputCities
 * @export
 */
export type CulturalDataWhereInputCities = StringFilter | string;
/**
 *
 * @export
 * @interface CulturalDataWhereUniqueInput
 */
export interface CulturalDataWhereUniqueInput {
    /**
     *
     * @type {string}
     * @memberof CulturalDataWhereUniqueInput
     */
    'id'?: string;
}
/**
 *
 * @export
 * @interface ErrorResponse
 */
export interface ErrorResponse {
    /**
     *
     * @type {object}
     * @memberof ErrorResponse
     */
    'details'?: object;
    /**
     *
     * @type {string}
     * @memberof ErrorResponse
     */
    'error': string;
}
/**
 *
 * @export
 * @interface FindCulturalData200Response
 */
export interface FindCulturalData200Response {
    /**
     *
     * @type {Array<CulturalData>}
     * @memberof FindCulturalData200Response
     */
    'data': Array<CulturalData>;
}
/**
 *
 * @export
 * @interface FindCulturalData400Response
 */
export interface FindCulturalData400Response {
    /**
     *
     * @type {Array<ErrorResponse>}
     * @memberof FindCulturalData400Response
     */
    'errors': Array<ErrorResponse>;
}
/**
 *
 * @export
 * @interface GroupByCulturalData200Response
 */
export interface GroupByCulturalData200Response {
    /**
     *
     * @type {Array<CulturalDataGroupByOutputType>}
     * @memberof GroupByCulturalData200Response
     */
    'data': Array<CulturalDataGroupByOutputType>;
}
/**
 *
 * @export
 * @interface NestedIntFilter
 */
export interface NestedIntFilter {
    /**
     *
     * @type {number}
     * @memberof NestedIntFilter
     */
    'eq'?: number;
    /**
     *
     * @type {number}
     * @memberof NestedIntFilter
     */
    'equals'?: number;
    /**
     *
     * @type {number}
     * @memberof NestedIntFilter
     */
    'gt'?: number;
    /**
     *
     * @type {number}
     * @memberof NestedIntFilter
     */
    'gte'?: number;
    /**
     *
     * @type {Array<number>}
     * @memberof NestedIntFilter
     */
    'in'?: Array<number>;
    /**
     *
     * @type {number}
     * @memberof NestedIntFilter
     */
    'lt'?: number;
    /**
     *
     * @type {number}
     * @memberof NestedIntFilter
     */
    'lte'?: number;
    /**
     *
     * @type {NestedIntFilterNot}
     * @memberof NestedIntFilter
     */
    'not'?: NestedIntFilterNot;
    /**
     *
     * @type {Array<number>}
     * @memberof NestedIntFilter
     */
    'notIn'?: Array<number>;
}
/**
 * @type NestedIntFilterNot
 * @export
 */
export type NestedIntFilterNot = NestedIntFilter | number;
/**
 *
 * @export
 * @interface NestedStringFilter
 */
export interface NestedStringFilter {
    /**
     *
     * @type {string}
     * @memberof NestedStringFilter
     */
    'contains'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringFilter
     */
    'endsWith'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringFilter
     */
    'eq'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringFilter
     */
    'equals'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringFilter
     */
    'gt'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringFilter
     */
    'gte'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof NestedStringFilter
     */
    'in'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof NestedStringFilter
     */
    'lt'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringFilter
     */
    'lte'?: string;
    /**
     *
     * @type {NestedStringFilterNot}
     * @memberof NestedStringFilter
     */
    'not'?: NestedStringFilterNot;
    /**
     *
     * @type {Array<string>}
     * @memberof NestedStringFilter
     */
    'notIn'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof NestedStringFilter
     */
    'startsWith'?: string;
}
/**
 * @type NestedStringFilterNot
 * @export
 */
export type NestedStringFilterNot = NestedStringFilter | string;
/**
 *
 * @export
 * @interface NestedStringWithAggregatesFilter
 */
export interface NestedStringWithAggregatesFilter {
    /**
     *
     * @type {NestedIntFilter}
     * @memberof NestedStringWithAggregatesFilter
     */
    '_count'?: NestedIntFilter;
    /**
     *
     * @type {NestedStringFilter}
     * @memberof NestedStringWithAggregatesFilter
     */
    '_max'?: NestedStringFilter;
    /**
     *
     * @type {NestedStringFilter}
     * @memberof NestedStringWithAggregatesFilter
     */
    '_min'?: NestedStringFilter;
    /**
     *
     * @type {string}
     * @memberof NestedStringWithAggregatesFilter
     */
    'contains'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringWithAggregatesFilter
     */
    'endsWith'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringWithAggregatesFilter
     */
    'eq'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringWithAggregatesFilter
     */
    'equals'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringWithAggregatesFilter
     */
    'gt'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringWithAggregatesFilter
     */
    'gte'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof NestedStringWithAggregatesFilter
     */
    'in'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof NestedStringWithAggregatesFilter
     */
    'lt'?: string;
    /**
     *
     * @type {string}
     * @memberof NestedStringWithAggregatesFilter
     */
    'lte'?: string;
    /**
     *
     * @type {NestedStringWithAggregatesFilterNot}
     * @memberof NestedStringWithAggregatesFilter
     */
    'not'?: NestedStringWithAggregatesFilterNot;
    /**
     *
     * @type {Array<string>}
     * @memberof NestedStringWithAggregatesFilter
     */
    'notIn'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof NestedStringWithAggregatesFilter
     */
    'startsWith'?: string;
}
/**
 * @type NestedStringWithAggregatesFilterNot
 * @export
 */
export type NestedStringWithAggregatesFilterNot = NestedStringWithAggregatesFilter | string;
/**
 *
 * @export
 * @enum {string}
 */
export declare const QueryMode: {
    readonly Default: "default";
    readonly Insensitive: "insensitive";
};
export type QueryMode = typeof QueryMode[keyof typeof QueryMode];
/**
 *
 * @export
 * @enum {string}
 */
export declare const SortOrder: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type SortOrder = typeof SortOrder[keyof typeof SortOrder];
/**
 *
 * @export
 * @interface StringFieldUpdateOperationsInput
 */
export interface StringFieldUpdateOperationsInput {
    /**
     *
     * @type {string}
     * @memberof StringFieldUpdateOperationsInput
     */
    'set'?: string;
}
/**
 *
 * @export
 * @interface StringFilter
 */
export interface StringFilter {
    /**
     *
     * @type {string}
     * @memberof StringFilter
     */
    'contains'?: string;
    /**
     *
     * @type {string}
     * @memberof StringFilter
     */
    'endsWith'?: string;
    /**
     *
     * @type {string}
     * @memberof StringFilter
     */
    'eq'?: string;
    /**
     *
     * @type {string}
     * @memberof StringFilter
     */
    'equals'?: string;
    /**
     *
     * @type {string}
     * @memberof StringFilter
     */
    'gt'?: string;
    /**
     *
     * @type {string}
     * @memberof StringFilter
     */
    'gte'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof StringFilter
     */
    'in'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof StringFilter
     */
    'lt'?: string;
    /**
     *
     * @type {string}
     * @memberof StringFilter
     */
    'lte'?: string;
    /**
     *
     * @type {QueryMode}
     * @memberof StringFilter
     */
    'mode'?: QueryMode;
    /**
     *
     * @type {NestedStringFilterNot}
     * @memberof StringFilter
     */
    'not'?: NestedStringFilterNot;
    /**
     *
     * @type {Array<string>}
     * @memberof StringFilter
     */
    'notIn'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof StringFilter
     */
    'startsWith'?: string;
}
/**
 *
 * @export
 * @interface StringWithAggregatesFilter
 */
export interface StringWithAggregatesFilter {
    /**
     *
     * @type {NestedIntFilter}
     * @memberof StringWithAggregatesFilter
     */
    '_count'?: NestedIntFilter;
    /**
     *
     * @type {NestedStringFilter}
     * @memberof StringWithAggregatesFilter
     */
    '_max'?: NestedStringFilter;
    /**
     *
     * @type {NestedStringFilter}
     * @memberof StringWithAggregatesFilter
     */
    '_min'?: NestedStringFilter;
    /**
     *
     * @type {string}
     * @memberof StringWithAggregatesFilter
     */
    'contains'?: string;
    /**
     *
     * @type {string}
     * @memberof StringWithAggregatesFilter
     */
    'endsWith'?: string;
    /**
     *
     * @type {string}
     * @memberof StringWithAggregatesFilter
     */
    'eq'?: string;
    /**
     *
     * @type {string}
     * @memberof StringWithAggregatesFilter
     */
    'equals'?: string;
    /**
     *
     * @type {string}
     * @memberof StringWithAggregatesFilter
     */
    'gt'?: string;
    /**
     *
     * @type {string}
     * @memberof StringWithAggregatesFilter
     */
    'gte'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof StringWithAggregatesFilter
     */
    'in'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof StringWithAggregatesFilter
     */
    'lt'?: string;
    /**
     *
     * @type {string}
     * @memberof StringWithAggregatesFilter
     */
    'lte'?: string;
    /**
     *
     * @type {QueryMode}
     * @memberof StringWithAggregatesFilter
     */
    'mode'?: QueryMode;
    /**
     *
     * @type {NestedStringWithAggregatesFilterNot}
     * @memberof StringWithAggregatesFilter
     */
    'not'?: NestedStringWithAggregatesFilterNot;
    /**
     *
     * @type {Array<string>}
     * @memberof StringWithAggregatesFilter
     */
    'notIn'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof StringWithAggregatesFilter
     */
    'startsWith'?: string;
}
/**
 * CulturalDataApi - axios parameter creator
 * @export
 */
export declare const CulturalDataApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Aggregate by Cultural_Data
     * @param {CulturalDataAggregateInput} select
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithRelationInput>} [orderBy]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    aggregateByCulturalData: (select: CulturalDataAggregateInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithRelationInput>, skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create multiple Cultural_Data records
     * @param {Array<CulturalDataCreateManyInput>} culturalDataCreateManyInput
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createManyCulturalData: (culturalDataCreateManyInput: Array<CulturalDataCreateManyInput>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create one Cultural_Data record
     * @param {CulturalDataCreateInput} culturalDataCreateInput
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createOneCulturalData: (culturalDataCreateInput: CulturalDataCreateInput, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete multiple Cultural_Data records
     * @param {CulturalDataWhereInput} [filter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCulturalData: (filter?: CulturalDataWhereInput, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCulturalDataById: (value: string, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve multiple Cultural_Data records
     * @param {CulturalDataSelectInput} [select]
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithRelationInput>} [orderBy]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCulturalData: (select?: CulturalDataSelectInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithRelationInput>, skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Find one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCulturalDataById: (value: string, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Group by Cultural_Data
     * @param {CulturalDataGroupByInput} select
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithAggregationInput>} [orderBy]
     * @param {Array<CulturalDataScalarFieldEnum>} [groupBy]
     * @param {CulturalDataScalarWhereWithAggregatesInput} [having]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    groupByCulturalData: (select: CulturalDataGroupByInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithAggregationInput>, groupBy?: Array<CulturalDataScalarFieldEnum>, having?: CulturalDataScalarWhereWithAggregatesInput, skip?: number, take?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update multiple Cultural_Data records
     * @param {CulturalDataUpdateManyInput} culturalDataUpdateManyInput
     * @param {CulturalDataWhereInput} [filter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCulturalData: (culturalDataUpdateManyInput: CulturalDataUpdateManyInput, filter?: CulturalDataWhereInput, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataUpdateInput} culturalDataUpdateInput
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCulturalDataById: (value: string, culturalDataUpdateInput: CulturalDataUpdateInput, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CulturalDataApi - functional programming interface
 * @export
 */
export declare const CulturalDataApiFp: (configuration?: Configuration) => {
    /**
     * Aggregate by Cultural_Data
     * @param {CulturalDataAggregateInput} select
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithRelationInput>} [orderBy]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    aggregateByCulturalData(select: CulturalDataAggregateInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithRelationInput>, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AggregateByCulturalData200Response>>;
    /**
     * Create multiple Cultural_Data records
     * @param {Array<CulturalDataCreateManyInput>} culturalDataCreateManyInput
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createManyCulturalData(culturalDataCreateManyInput: Array<CulturalDataCreateManyInput>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateManyCulturalData201Response>>;
    /**
     * Create one Cultural_Data record
     * @param {CulturalDataCreateInput} culturalDataCreateInput
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createOneCulturalData(culturalDataCreateInput: CulturalDataCreateInput, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateOneCulturalData201Response>>;
    /**
     * Delete multiple Cultural_Data records
     * @param {CulturalDataWhereInput} [filter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCulturalData(filter?: CulturalDataWhereInput, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateManyCulturalData201Response>>;
    /**
     * Delete one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCulturalDataById(value: string, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateOneCulturalData201Response>>;
    /**
     * Retrieve multiple Cultural_Data records
     * @param {CulturalDataSelectInput} [select]
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithRelationInput>} [orderBy]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCulturalData(select?: CulturalDataSelectInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithRelationInput>, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FindCulturalData200Response>>;
    /**
     * Find one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCulturalDataById(value: string, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateOneCulturalData201Response>>;
    /**
     * Group by Cultural_Data
     * @param {CulturalDataGroupByInput} select
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithAggregationInput>} [orderBy]
     * @param {Array<CulturalDataScalarFieldEnum>} [groupBy]
     * @param {CulturalDataScalarWhereWithAggregatesInput} [having]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    groupByCulturalData(select: CulturalDataGroupByInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithAggregationInput>, groupBy?: Array<CulturalDataScalarFieldEnum>, having?: CulturalDataScalarWhereWithAggregatesInput, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GroupByCulturalData200Response>>;
    /**
     * Update multiple Cultural_Data records
     * @param {CulturalDataUpdateManyInput} culturalDataUpdateManyInput
     * @param {CulturalDataWhereInput} [filter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCulturalData(culturalDataUpdateManyInput: CulturalDataUpdateManyInput, filter?: CulturalDataWhereInput, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateManyCulturalData201Response>>;
    /**
     * Update one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataUpdateInput} culturalDataUpdateInput
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCulturalDataById(value: string, culturalDataUpdateInput: CulturalDataUpdateInput, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateOneCulturalData201Response>>;
};
/**
 * CulturalDataApi - factory interface
 * @export
 */
export declare const CulturalDataApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Aggregate by Cultural_Data
     * @param {CulturalDataAggregateInput} select
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithRelationInput>} [orderBy]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    aggregateByCulturalData(select: CulturalDataAggregateInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithRelationInput>, skip?: number, take?: number, options?: any): AxiosPromise<AggregateByCulturalData200Response>;
    /**
     * Create multiple Cultural_Data records
     * @param {Array<CulturalDataCreateManyInput>} culturalDataCreateManyInput
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createManyCulturalData(culturalDataCreateManyInput: Array<CulturalDataCreateManyInput>, options?: any): AxiosPromise<CreateManyCulturalData201Response>;
    /**
     * Create one Cultural_Data record
     * @param {CulturalDataCreateInput} culturalDataCreateInput
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createOneCulturalData(culturalDataCreateInput: CulturalDataCreateInput, select?: CulturalDataSelectInput, options?: any): AxiosPromise<CreateOneCulturalData201Response>;
    /**
     * Delete multiple Cultural_Data records
     * @param {CulturalDataWhereInput} [filter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCulturalData(filter?: CulturalDataWhereInput, options?: any): AxiosPromise<CreateManyCulturalData201Response>;
    /**
     * Delete one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCulturalDataById(value: string, select?: CulturalDataSelectInput, options?: any): AxiosPromise<CreateOneCulturalData201Response>;
    /**
     * Retrieve multiple Cultural_Data records
     * @param {CulturalDataSelectInput} [select]
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithRelationInput>} [orderBy]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCulturalData(select?: CulturalDataSelectInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithRelationInput>, skip?: number, take?: number, options?: any): AxiosPromise<FindCulturalData200Response>;
    /**
     * Find one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    findCulturalDataById(value: string, select?: CulturalDataSelectInput, options?: any): AxiosPromise<CreateOneCulturalData201Response>;
    /**
     * Group by Cultural_Data
     * @param {CulturalDataGroupByInput} select
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithAggregationInput>} [orderBy]
     * @param {Array<CulturalDataScalarFieldEnum>} [groupBy]
     * @param {CulturalDataScalarWhereWithAggregatesInput} [having]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    groupByCulturalData(select: CulturalDataGroupByInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithAggregationInput>, groupBy?: Array<CulturalDataScalarFieldEnum>, having?: CulturalDataScalarWhereWithAggregatesInput, skip?: number, take?: number, options?: any): AxiosPromise<GroupByCulturalData200Response>;
    /**
     * Update multiple Cultural_Data records
     * @param {CulturalDataUpdateManyInput} culturalDataUpdateManyInput
     * @param {CulturalDataWhereInput} [filter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCulturalData(culturalDataUpdateManyInput: CulturalDataUpdateManyInput, filter?: CulturalDataWhereInput, options?: any): AxiosPromise<CreateManyCulturalData201Response>;
    /**
     * Update one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataUpdateInput} culturalDataUpdateInput
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCulturalDataById(value: string, culturalDataUpdateInput: CulturalDataUpdateInput, select?: CulturalDataSelectInput, options?: any): AxiosPromise<CreateOneCulturalData201Response>;
};
/**
 * CulturalDataApi - object-oriented interface
 * @export
 * @class CulturalDataApi
 * @extends {BaseAPI}
 */
export declare class CulturalDataApi extends BaseAPI {
    /**
     * Aggregate by Cultural_Data
     * @param {CulturalDataAggregateInput} select
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithRelationInput>} [orderBy]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CulturalDataApi
     */
    aggregateByCulturalData(select: CulturalDataAggregateInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithRelationInput>, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AggregateByCulturalData200Response, any>>;
    /**
     * Create multiple Cultural_Data records
     * @param {Array<CulturalDataCreateManyInput>} culturalDataCreateManyInput
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CulturalDataApi
     */
    createManyCulturalData(culturalDataCreateManyInput: Array<CulturalDataCreateManyInput>, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateManyCulturalData201Response, any>>;
    /**
     * Create one Cultural_Data record
     * @param {CulturalDataCreateInput} culturalDataCreateInput
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CulturalDataApi
     */
    createOneCulturalData(culturalDataCreateInput: CulturalDataCreateInput, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateOneCulturalData201Response, any>>;
    /**
     * Delete multiple Cultural_Data records
     * @param {CulturalDataWhereInput} [filter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CulturalDataApi
     */
    deleteCulturalData(filter?: CulturalDataWhereInput, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateManyCulturalData201Response, any>>;
    /**
     * Delete one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CulturalDataApi
     */
    deleteCulturalDataById(value: string, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateOneCulturalData201Response, any>>;
    /**
     * Retrieve multiple Cultural_Data records
     * @param {CulturalDataSelectInput} [select]
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithRelationInput>} [orderBy]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CulturalDataApi
     */
    findCulturalData(select?: CulturalDataSelectInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithRelationInput>, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FindCulturalData200Response, any>>;
    /**
     * Find one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CulturalDataApi
     */
    findCulturalDataById(value: string, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateOneCulturalData201Response, any>>;
    /**
     * Group by Cultural_Data
     * @param {CulturalDataGroupByInput} select
     * @param {CulturalDataWhereInput} [filter]
     * @param {Array<CulturalDataOrderByWithAggregationInput>} [orderBy]
     * @param {Array<CulturalDataScalarFieldEnum>} [groupBy]
     * @param {CulturalDataScalarWhereWithAggregatesInput} [having]
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CulturalDataApi
     */
    groupByCulturalData(select: CulturalDataGroupByInput, filter?: CulturalDataWhereInput, orderBy?: Array<CulturalDataOrderByWithAggregationInput>, groupBy?: Array<CulturalDataScalarFieldEnum>, having?: CulturalDataScalarWhereWithAggregatesInput, skip?: number, take?: number, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<GroupByCulturalData200Response, any>>;
    /**
     * Update multiple Cultural_Data records
     * @param {CulturalDataUpdateManyInput} culturalDataUpdateManyInput
     * @param {CulturalDataWhereInput} [filter]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CulturalDataApi
     */
    updateCulturalData(culturalDataUpdateManyInput: CulturalDataUpdateManyInput, filter?: CulturalDataWhereInput, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateManyCulturalData201Response, any>>;
    /**
     * Update one Cultural_Data record by id
     * @param {string} value
     * @param {CulturalDataUpdateInput} culturalDataUpdateInput
     * @param {CulturalDataSelectInput} [select]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CulturalDataApi
     */
    updateCulturalDataById(value: string, culturalDataUpdateInput: CulturalDataUpdateInput, select?: CulturalDataSelectInput, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateOneCulturalData201Response, any>>;
}
export declare const CulturalDataApiService: CulturalDataApi;
